Object subclass: #Autoparte	instanceVariableNames: 'nroPieza stock descripcion costo listaImpuestos cantVendidos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Autoparte commentStamp: 'FidelDalmasso 9/17/2019 22:26' prior: 0!. !!Autoparte methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:48'!reducirStock: n	"Reduce el stock en n"	(n > stock) ifTrue: [ Object error: 'No hay suficiente stock' ] ifFalse:	[stock:= stock - n].		"Incrementa el numero de vendidos"	cantVendidos:= cantVendidos + n.! !!Autoparte methodsFor: 'as yet unclassified' stamp: 'fideldalmasso 9/17/2019 19:49:28'!agregarImpuesto: unImpuesto	"Agrega un impuesto a la lista de impuestos"	listaImpuestos add: unImpuesto.	! !!Autoparte methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:37'!inicializar: unNroPieza descripcion: unaDescripcion costo: unCosto	"Inicializa los atributos de autoparte"	listaImpuestos:= OrderedCollection new:0.	stock := 0.	cantVendidos := 0.	costo := unCosto.	descripcion := unaDescripcion.	nroPieza := unNroPieza.	^self.! !!Autoparte methodsFor: 'as yet unclassified' stamp: 'fideldalmasso 9/17/2019 19:49:28'!agregarStock: cantstock:= stock + cant.! !!Autoparte methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!calcularPrecioDeVenta|margen impuestos|impuestos:=0.margen:=((Empresa margenComercial * costo)/100).listaImpuestos do: [:i| impuestos:= (impuestos + (i calcularImpuesto: costo))].^(costo + margen + impuestos).! !!Autoparte methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 20:49'!costo	"Devuelve el precio de la autoparte"	^costo.! !!Autoparte methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 04:44'!imprimir Transcript 	show: 'nroPieza: '; show: nroPieza; 	show: ' stock: '; show: stock;	show: ' costo: $'; show: costo;	show: ' cantVendidos: '; show:cantVendidos ;	show: ' descripcion: '; show: descripcion;	cr.! !!Autoparte methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 17:18'!stock^ stock.! !!Autoparte methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 03:05'!cantVendidos	"retorna la cantidad de vendidos de la autoparte"	^cantVendidos.! !!Autoparte methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 16:45'!nroPieza	"Devuelve el numero de pieza de la autoparte."	^nroPieza.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Autoparte class	instanceVariableNames: ''!!Autoparte class methodsFor: 'instance creation' stamp: 'fideldalmasso 9/17/2019 19:49:28'!new: unNroPieza descripcion: unaDescripcion costo: unCosto	"Crea una nueva instancia de autoparte"	^((super new) inicializar: unNroPieza descripcion: unaDescripcion costo: unCosto).! !Object subclass: #Carrito	instanceVariableNames: 'items'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Carrito commentStamp: 'FidelDalmasso 9/21/2019 19:47' prior: 0!. !!Carrito methodsFor: 'inicializar' stamp: 'FidelDalmasso 9/21/2019 20:02'!inicializaritems:= OrderedCollection new: 0.! !!Carrito methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 21:37'!items^items! !!Carrito methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:51'!agregar: unaAutoparte cant: n	"Agrega un item al carrito de un cliente"	| item |	item := ItemVenta new:unaAutoparte cant:n.	items add:item.! !!Carrito methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/22/2019 04:14'!imprimiritems do: [ :i | Transcript 	show: 'nroPieza: '; show: ((i autoparte) nroPieza); 	show: ' cantidad: '; show: i cantidad; 	cr].Transcript show: '--'; cr.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Carrito class	instanceVariableNames: ''!!Carrito class methodsFor: 'instance creation' stamp: 'FidelDalmasso 9/22/2019 04:22'!new^(super new) inicializar.! !Object subclass: #Cliente	instanceVariableNames: 'dni listaCompras'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Cliente commentStamp: 'FidelDalmasso 9/17/2019 22:26' prior: 0!. !!Cliente methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 23:38'!inicializar: unDni	"Inicializa los atributos de la instancia de cliente"	dni := unDni.	listaCompras := OrderedCollection new:0.	^self.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 23:56'!comprar: unaCompra	"Agrega una compra al principio de alistaCompras"	listaCompras addFirst: unaCompra.	! !!Cliente methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 16:55'!dni	"Retorna el dni del cliente"	^dni.! !!Cliente methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 23:38'!compras	"Retorna la lista de ventas realizadas al cliente"	^listaCompras.! !!Cliente methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 04:32'!imprimirTranscript 		show: 'dni: '; show: dni;		cr.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'instance creation' stamp: 'fideldalmasso 9/17/2019 19:49:28'!new: unDni	"Crea una instancia de la clase cliente"	^((super new) inicializar: unDni).! !Object subclass: #Empresa	instanceVariableNames: 'listaVentas listaClientes listaAutopartes'	classVariableNames: 'margenComercial mesesGarantia'	poolDictionaries: ''	category: 'TP1'!!Empresa commentStamp: 'FidelDalmasso 9/25/2019 15:11' prior: 0!. !!Empresa methodsFor: 'operaciones con clientes' stamp: 'FidelDalmasso 9/21/2019 18:16'!agregarCliente: unCliente(listaClientes includes: unCliente)		ifTrue: [^'ERROR: el cliente ya existe'] 		ifFalse: [ listaClientes  at:(unCliente dni) put:unCliente]. ! !!Empresa methodsFor: 'operaciones con clientes' stamp: 'FidelDalmasso 9/21/2019 21:40'!calcularVentasCliente: dni	"Retorna el monto total vendido al cliente"| aux montoTotal |aux:= (listaClientes at:dni) compras.montoTotal:= 0.aux do: [ :i | montoTotal:= montoTotal + (i totalAbonado)].^montoTotal.! !!Empresa methodsFor: 'operaciones con autopartes' stamp: 'FidelDalmasso 9/22/2019 03:16'!aplicarImpuesto: unImpuesto a: nroPieza(listaAutopartes at: nroPieza) agregarImpuesto: unImpuesto.^'Impuesto aplicado'.								! !!Empresa methodsFor: 'operaciones con autopartes' stamp: 'FidelDalmasso 9/21/2019 17:21'!consultarStock: nroPieza"Devuelve el stock de una autoparte determinada"			^(listaAutopartes at: nroPieza) stock.! !!Empresa methodsFor: 'operaciones con autopartes' stamp: 'FidelDalmasso 9/21/2019 17:25'!agregarAutoparte: unaAutoparte(listaAutopartes includes: unaAutoparte) 		ifTrue: [^'ERROR: la autoparte ya existe'] 		ifFalse: [ listaAutopartes at:(unaAutoparte nroPieza) put: unaAutoparte]. ! !!Empresa methodsFor: 'operaciones con autopartes' stamp: 'FidelDalmasso 9/21/2019 17:27'!consultarPrecioDeVenta: nroPieza	^(listaAutopartes at: nroPieza) calcularPrecioDeVenta.! !!Empresa methodsFor: 'operaciones con autopartes' stamp: 'FidelDalmasso 9/22/2019 03:05'!calcularUnidadesVendidasProducto: nroPieza	"Retorna la cantidad de ventas de una autoparte"	^((listaAutopartes at: nroPieza)cantVendidos).	! !!Empresa methodsFor: 'operaciones con autopartes' stamp: 'JuanWigg 9/24/2019 21:31:45'!incorporarAutoparte: unaAutoparte cantidad: cant(cant < 0) ifTrue:[Object error: 'Cantidad no puede ser negativo'] ifFalse:[(listaAutopartes includes: unaAutoparte) ifTrue: [unaAutoparte agregarStock: cant.]ifFalse: [Object error: 'ERROR: no existe la autoparte'].].! !!Empresa methodsFor: 'inicializar' stamp: 'FidelDalmasso 9/21/2019 18:30'!inicializar	"Inicializa los atributos de la instancia de empresa"	listaVentas := OrderedCollection new:0.	listaClientes := Dictionary new:0.	listaAutopartes := Dictionary new:0.	^self.! !!Empresa methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 00:54'!listaVentas^listaVentas.! !!Empresa methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 01:15'!listaAutopartes^listaAutopartes ! !!Empresa methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 01:15'!listaClientes^listaClientes ! !!Empresa methodsFor: 'accessing' stamp: 'JuanWigg 9/24/2019 21:31:45'!imprimirWorld submorphs  detect: [ :m | m model = Transcript ]  ifNone: [ Transcript open ].Transcript clear; show: '---Autopartes registradas---'; cr.listaAutopartes do:[ :i | i imprimir].Transcript cr; show: '---Clientes registrados---'; cr.listaClientes do:[ :i | i imprimir].Transcript cr; show: '---Ventas registradas---'; cr.listaVentas do:[ :i | i imprimir ]."nroPieza stock descripcion costo listaImpuestos cantVendidos"! !!Empresa methodsFor: 'operaciones con ventas' stamp: 'JuanWigg 9/24/2019 21:31:45'!calcularTotalVentasMes: mes	"Devuelve el monto total de las ventas del mes"|total|total:= 0.(listaVentas select: [ :i | (i fecha)monthIndex = mes ]) do: [ :i | total:= total + (i totalAbonado)].^total.! !!Empresa methodsFor: 'operaciones con ventas' stamp: 'JuanWigg 9/24/2019 21:31:45'!enGarantia: nroPieza cliente: dni	| comprasDelCliente fechaHoy fechaVencimiento ultimaCompra|		comprasDelCliente := (listaClientes at: dni) compras.	ultimaCompra:=	comprasDelCliente detect: [ :i | (i obtenerPiezas) includes: (listaAutopartes at:nroPieza) ].	fechaVencimiento:=(ultimaCompra fecha) addMonths: (ultimaCompra mesesGarantia).		fechaHoy:= Date today.		^((fechaHoy) <= (fechaVencimiento)).		! !!Empresa methodsFor: 'operaciones con ventas' stamp: 'FidelDalmasso 9/22/2019 01:35'!generarVenta: listaItems a: unCliente descuento: desc fecha:unaFecha|venta|venta:=( Venta new: unCliente listaItems: listaItems desc: desc fecha:unaFecha).unCliente comprar: venta.listaVentas add: venta.! !!Empresa methodsFor: 'operaciones con ventas' stamp: 'JuanWigg 9/24/2019 21:31:45'!generarVenta: listaItems a: unCliente descuento: desc|venta|(desc < 0) ifTrue:[Object error:'No se puede ingresar un descuento negativo']ifFalse:[venta:=( Venta new: unCliente listaItems: listaItems desc: desc).unCliente comprar: venta.listaVentas add: venta.].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empresa class	instanceVariableNames: ''!!Empresa class methodsFor: 'instance creation' stamp: 'FidelDalmasso 9/21/2019 21:05'!new: unMargenComercial 	self 		deprecated: 'Use new: instead'		on: 	'21 September 2019' 		in: 'Pharo-6.0-60547-'.	^ self new: unMargenComercial ! !!Empresa class methodsFor: 'instance creation' stamp: 'FidelDalmasso 9/21/2019 21:02'!new^((super new) inicializar).! !!Empresa class methodsFor: 'as yet unclassified' stamp: 'fideldalmasso 9/17/2019 19:49:28'!margenComercial	"Retorna el valor de margenComercial"	^margenComercial.! !!Empresa class methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!mesesGarantia:mesesmesesGarantia:=meses.! !!Empresa class methodsFor: 'as yet unclassified' stamp: 'fideldalmasso 9/17/2019 19:49:28'!margenComercial: unMargen	"Modifica el valor de margenComercial"	margenComercial:=unMargen.! !!Empresa class methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!mesesGarantia^mesesGarantia ! !Object subclass: #Impuesto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Impuesto commentStamp: 'FidelDalmasso 9/17/2019 22:25' prior: 0!. !!Impuesto methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/17/2019 21:08'!calcularImpuesto: unCosto^nil.! !Impuesto subclass: #ImpuestoEscalonado	instanceVariableNames: 'tope1Inclusivo pcentaje1 pcentaje2 pcentaje3 tope2Inclusivo'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!ImpuestoEscalonado commentStamp: 'FidelDalmasso 9/17/2019 22:25' prior: 0!.!!ImpuestoEscalonado methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:44'!inicializar: extremo1 tope2: extremo2 primerPcentaje: primerPcentaje segundoPcentaje: segundoPcentaje tercerPcentaje: tercerPcentajetope1Inclusivo := extremo1.tope2Inclusivo := extremo2.pcentaje1 := primerPcentaje.pcentaje2 := segundoPcentaje.pcentaje3 := tercerPcentaje.^self.! !!ImpuestoEscalonado methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:44'!calcularImpuesto: unCosto(unCosto between: 0 and: tope1Inclusivo) ifTrue:[^(unCosto*0.01*pcentaje1)] 										ifFalse:[(unCosto between:tope1Inclusivo and:tope2Inclusivo) ifTrue:[^(unCosto*0.01*pcentaje2)] ifFalse:[^(unCosto*0.01*pcentaje3)]].! !!ImpuestoEscalonado methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:44'!topes	"Devuelve los topes en forma de arreglo ordenado"	| coleccion |	coleccion := OrderedCollection new.	coleccion add: tope1Inclusivo.	coleccion add: tope2Inclusivo.	^coleccion.! !!ImpuestoEscalonado methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!modificarPctenaje: porcen1 pcentaje2: porcen2 pcentaje3: porcen3	"Modifica los porcentajes del impuesto"	pcentaje1:=porcen1.	pcentaje2:=porcen2.	pcentaje3:=porcen3.! !!ImpuestoEscalonado methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!porcentajes	"Devuelve los tres porcentajes en forma de arreglo ordenado"	| coleccion |	coleccion := OrderedCollection new.	coleccion add: pcentaje1.	coleccion add: pcentaje2.	coleccion add: pcentaje3.	^coleccion.! !!ImpuestoEscalonado methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 20:44'!modificarTope: primerTope tope2: segundoTope	"Modifica los topes del impuesto escalonado"	tope1Inclusivo:=primerTope.	tope2Inclusivo:=segundoTope.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ImpuestoEscalonado class	instanceVariableNames: ''!!ImpuestoEscalonado class methodsFor: 'instance creation' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!new: tope1 tope2: tope2 pcentaje1:pcentaje1 pcentaje2:pcentaje2 pcentaje3:pcentaje3^((super new) inicializar: tope1 tope2: tope2 primerPcentaje: pcentaje1  segundoPcentaje: pcentaje2 tercerPcentaje: pcentaje3).! !Impuesto subclass: #ImpuestoFijo	instanceVariableNames: 'importe'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!ImpuestoFijo commentStamp: 'FidelDalmasso 9/17/2019 22:25' prior: 0!. !!ImpuestoFijo methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/17/2019 22:20'!inicializar: unImporteimporte:= unImporte.! !!ImpuestoFijo methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!valorImpuesto	"Retorna el valor del impuesto"	^importe.! !!ImpuestoFijo methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/17/2019 21:09'!calcularImpuesto: unCosto^importe.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ImpuestoFijo class	instanceVariableNames: ''!!ImpuestoFijo class methodsFor: 'instance creation' stamp: 'FidelDalmasso 9/17/2019 22:20'!new: unImporte^((super new) inicializar: unImporte ).! !Impuesto subclass: #ImpuestoVariable	instanceVariableNames: 'porcentaje'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!ImpuestoVariable commentStamp: 'FidelDalmasso 9/17/2019 22:25' prior: 0!. !!ImpuestoVariable methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/17/2019 22:18'!inicializar: unPorcentajeporcentaje:= unPorcentaje.! !!ImpuestoVariable methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/17/2019 21:10'!calcularImpuesto: unCosto^ unCosto * (porcentaje / 100)! !!ImpuestoVariable methodsFor: 'as yet unclassified' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!valorPorcentaje	"Devuelve el valor del impuesto variable"	^porcentaje.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ImpuestoVariable class	instanceVariableNames: ''!!ImpuestoVariable class methodsFor: 'instance creation' stamp: 'FidelDalmasso 9/17/2019 21:07'!new: unPorcentaje^((super new) inicializar: unPorcentaje).! !Object subclass: #ItemVenta	instanceVariableNames: 'autoparte cantidad precioVigente precioConImpuestos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!ItemVenta commentStamp: 'FidelDalmasso 9/17/2019 22:25' prior: 0!. !!ItemVenta methodsFor: 'accessing' stamp: 'fideldalmasso 9/17/2019 19:49:28'!cantidad	"Devuelve al cantidad del item"	^cantidad.! !!ItemVenta methodsFor: 'accessing' stamp: 'fideldalmasso 9/17/2019 19:49:28'!precioConImpuestos	"Devuelve el precio con impuestos del item"	^precioConImpuestos.! !!ItemVenta methodsFor: 'accessing' stamp: 'FidelDalmasso 9/21/2019 20:01'!autoparte^autoparte.! !!ItemVenta methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/25/2019 15:07'!inicializar: unaAutoparte cant: n	"Inicializa la instancia del item de venta"	autoparte:= unaAutoparte.	cantidad := n.	^self.! !!ItemVenta methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 21:56'!calcularPreciosprecioVigente := (autoparte costo) shallowCopy.precioConImpuestos := (autoparte calcularPrecioDeVenta) shallowCopy.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ItemVenta class	instanceVariableNames: ''!!ItemVenta class methodsFor: 'instance creation' stamp: 'fideldalmasso 9/17/2019 19:49:28'!new:unaAutoparte cant: n	"Crea una instancia de ItemVenta"	^((super new) inicializar: unaAutoparte cant: n). ! !Object subclass: #Venta	instanceVariableNames: 'cliente totalNeto mesesGarantia porcentajeDescuento importeDescontado fecha totalAbonado listaItems'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Venta commentStamp: 'FidelDalmasso 9/17/2019 22:26' prior: 0!. !!Venta methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 23:27'!obtenerPiezas	"Retorna una coleccion con las piezas involucradas en la compra"	| aux |	aux := OrderedCollection new.(listaItems items) do: [ :i | 	(aux includes: i autoparte) ifFalse:[aux add: (i autoparte)] ].	^aux.	! !!Venta methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/21/2019 21:40'!totalAbonado	"Retorna el total abonado de la venta"	^totalAbonado.! !!Venta methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/24/2019 23:45'!inicializar: unCliente listaItems: unCarrito desc: unDescuento	"Inicializa la instancia de venta"		fecha:= Date today.		cliente:= unCliente.		mesesGarantia := (Empresa mesesGarantia) shallowCopy.		totalNeto:=0.	listaItems := unCarrito.		(unCarrito items) do:	[ :i | 	i calcularPrecios. 	totalNeto:= totalNeto + (i precioConImpuestos * i cantidad).	i autoparte reducirStock: i cantidad.	].	porcentajeDescuento:= unDescuento.	importeDescontado:= totalNeto*(porcentajeDescuento /100).	totalAbonado := totalNeto - importeDescontado.	^self.! !!Venta methodsFor: 'as yet unclassified' stamp: 'FidelDalmasso 9/22/2019 01:35'!inicializar: unCliente listaItems: unCarrito desc: unDescuento fecha: unaFecha	"Inicializa la instancia de venta"	cliente:= unCliente.		fecha := unaFecha.		porcentajeDescuento := unDescuento.		mesesGarantia := (Empresa mesesGarantia) shallowCopy.		totalNeto:=0.	listaItems := unCarrito.		(unCarrito items) do:	[ :i | 	i calcularPrecios. 	totalNeto:= totalNeto + (i precioConImpuestos * i cantidad).	i autoparte reducirStock: i cantidad.	].	importeDescontado:= totalNeto*(porcentajeDescuento/100).	totalAbonado := totalNeto - importeDescontado.	^self.! !!Venta methodsFor: 'as yet unclassified' stamp: 'JuanWigg 9/24/2019 21:31:45'!imprimirTranscript 		show: 'cliente: '; show: (cliente dni); 		show: ' totalAbonado: $'; show: (totalAbonado); 		show: ' garantia: '; show: mesesGarantia; show: ' meses';		show: ' desc: '; show: porcentajeDescuento; show: '%';		show: ' fecha: '; show: fecha;		cr.! !!Venta methodsFor: 'accessing' stamp: 'MatÃ­asHillar 9/20/2019 13:13:17'!fecha	"Devuelve la fecha de la venta"	^fecha.! !!Venta methodsFor: 'accessing' stamp: 'FidelDalmasso 9/22/2019 00:48'!mesesGarantia^mesesGarantia ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Venta class	instanceVariableNames: ''!!Venta class methodsFor: 'instance creation' stamp: 'JuanWigg 9/24/2019 21:31:45'!new: unCliente listaItems: unaListaItems desc: unDescuento	"Crea una instancia de Venta"	(unDescuento < 0) ifTrue:[Object error:'No capo, no podes meter un descuento negativo'] ifFalse:	[^((super new) inicializar: unCliente listaItems: unaListaItems desc: unDescuento)].! !!Venta class methodsFor: 'instance creation' stamp: 'FidelDalmasso 9/22/2019 01:41'!new: unCliente listaItems: unaListaItems desc: unDescuento fecha: unaFecha	"Crea una instancia de Venta"	^((super new) inicializar: unCliente listaItems: unaListaItems desc: unDescuento  fecha: unaFecha ).! !